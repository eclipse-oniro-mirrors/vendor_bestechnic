# Copyright (c) 2021 Bestechnic (Shanghai) Co., Ltd. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

devicemanager_path = "//foundation/distributedhardware/devicemanager/ext/mini"
common_path = "${devicemanager_path}/common"
utils_path = "${devicemanager_path}/utils"
services_path = "${devicemanager_path}/services/devicemanagerservice"
innerkits_path = "${devicemanager_path}/interfaces_mini/inner_kits"
kits_path = "${devicemanager_path}/interfaces_mini/kits"
dm_ldflags = [ "-lpthread" ]

static_library("devicemanagerutils_mini") {
  include_dirs = [
    "${common_path}/include",
    "${utils_path}/include",
    "${utils_path}/include/log",
    "${utils_path}/include/cipher",
  ]

  include_dirs += [
    "//base/security/deviceauth/interfaces/innerkits",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
    "//utils/native/lite/include",
    "//utils/system/safwk/native/include",
    "//third_party/json/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
    "//third_party/bounds_checking_function/include",
    "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
  ]

  sources = [
    "${utils_path}/src/anonymous_string.cpp",
    "${utils_path}/src/cipher/encrypt_utils.cpp",
    "${utils_path}/src/log/dm_log.cpp",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"devicemanagerutils\"",
    "LOG_DOMAIN=0xD004100",
  ]

  deps = [
    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static",
    "//base/startup/syspara_lite/frameworks/parameter/src:sysparam",
    "//foundation/distributedschedule/samgr_lite/samgr",
    "//third_party/bounds_checking_function:libsec_static",
    "//third_party/mbedtls",
    "//utils/native/lite:utils",
  ]
}

static_library("devicemanagerservice_mini") {
  include_dirs = [
    "${services_path}/include",
    "${services_path}/include/ability",
    "${services_path}/include/softbus",
    "${services_path}/include/requestauth",
    "${services_path}/include/auth",
    "${services_path}/include/timer",
    "${services_path}/include/message",
    "${utils_path}/include/cipher",
    "${utils_path}/include/log",
    "${utils_path}/include",
    "${common_path}/include",
    "${innerkits_path}/native_cpp/include",
    "${innerkits_path}/native_cpp/include/notify",
    "${services_path}/include/dispatch",
  ]

  include_dirs += [
    "//base/security/deviceauth/interfaces/innerkits",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
    "//utils/native/lite/include",
    "//utils/system/safwk/native/include",
    "//third_party/json/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits/hilog",
    "//third_party/bounds_checking_function/include",
    "//foundation/communication/ipc_lite/interfaces/kits",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//foundation/communication/dsoftbus/interfaces/kits/common",
    "//foundation/communication/dsoftbus/interfaces/kits/discovery",
    "//foundation/communication/dsoftbus/interfaces/kits/transport",
    "//foundation/communication/dsoftbus/interfaces/inner_kits/transport",
    "//foundation/distributedhardware/devicemanager/services/devicemanagerservice/include/dependency/multipleuser",
    "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
  ]

  sources = [
    "${services_path}/src/ability/lite/dm_ability_manager.cpp",
    "${services_path}/src/auth/hichain_connector.cpp",
    "${services_path}/src/dispatch/command_dispatch.cpp",
    "${services_path}/src/dispatch/message_processing.cpp",
    "${services_path}/src/dispatch/server_init.cpp",
    "${services_path}/src/dispatch/server_stub.cpp",
    "${services_path}/src/message/msg_codec.cpp",
    "${services_path}/src/message/msg_head.cpp",
    "${services_path}/src/message/msg_request_auth.cpp",
    "${services_path}/src/message/msg_response_auth.cpp",
    "${services_path}/src/message/msg_sync_group.cpp",
    "${services_path}/src/multipleuser/multiple_user_connector.cpp",
    "${services_path}/src/requestauth/auth_manager.cpp",
    "${services_path}/src/requestauth/request_session.cpp",
    "${services_path}/src/requestauth/response_session.cpp",
    "${services_path}/src/softbus/softbus_adapter.cpp",
    "${services_path}/src/softbus/softbus_session.cpp",
    "${services_path}/src/timer/dm_timer.cpp",
  ]

  defines = [
    "LITE_DEVICE",
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"devicemanagerservice\"",
    "LOG_DOMAIN=0xD004100",
  ]

  ldflags = dm_ldflags

  deps = [
    ":devicemanagersdk_mini",
    ":devicemanagerutils_mini",
    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static",
    "//base/security/deviceauth/services:deviceauth",
    "//base/startup/syspara_lite/frameworks/parameter/src:sysparam",
    "//foundation/communication/dsoftbus/sdk:softbus_client",
    "//foundation/distributedschedule/samgr_lite/samgr",
    "//third_party/bounds_checking_function:libsec_static",
    "//third_party/mbedtls",
    "//utils/native/lite:utils",
  ]
}

static_library("devicemanagersdk_mini") {
  include_dirs = [
    "${innerkits_path}/native_cpp/include",
    "${innerkits_path}/native_cpp/include/notify",
    "${utils_path}/include/log",
    "${common_path}/include",
    "${services_path}/include/dispatch",
  ]
  include_dirs += [
    "//utils/native/lite/include",
    "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits/hilog",
    "//third_party/bounds_checking_function/include",
    "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
    "//third_party/json/include",
  ]

  sources = [
    "${innerkits_path}/native_cpp/src/device_manager.cpp",
    "${innerkits_path}/native_cpp/src/device_manager_impl.cpp",
    "${innerkits_path}/native_cpp/src/notify/device_manager_notify.cpp",
  ]

  defines = [
    "LITE_DEVICE",
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"devicemanagerkit\"",
    "LOG_DOMAIN=0xD004100",
  ]

  deps = [
    ":devicemanagerutils_mini",
    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static",
    "//foundation/distributedschedule/samgr_lite/samgr",
    "//third_party/bounds_checking_function:libsec_static",
    "//utils/native/lite:utils",
  ]
}

static_library("devicemanager_native_js") {
  include_dirs = [
    "//third_party/node/src",
    "//third_party/json/include",
    "${common_path}/include",
    "//utils/native/base/include",
    "${kits_path}/js/include",
    "${utils_path}/include/log",
    "//foundation/ace/ace_engine_lite/interfaces/innerkits/builtin/base",
    "//foundation/ace/ace_engine_lite/interfaces/innerkits/builtin/jsi",
    "//foundation/ace/ace_engine_lite/interfaces/innerkits/builtin/async",
    "${innerkits_path}/native_cpp/include",
  ]

  sources = [
    "${kits_path}/js/src/dm_native_event.cpp",
    "${kits_path}/js/src/native_devicemanager_js.cpp",
  ]

  deps = [
    ":devicemanagersdk_mini",
    ":devicemanagerutils_mini",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"devicemanagerkit_js\"",
    "LOG_DOMAIN=0xD004100",
  ]
}

static_library("devicemanager") {
  deps = [
    ":devicemanager_native_js",
    ":devicemanagersdk_mini",
    ":devicemanagerservice_mini",
    ":devicemanagerutils_mini",
  ]
}
