From a791fc52828d152147249cff46ddca8409d88054 Mon Sep 17 00:00:00 2001
From: yangjian <jianyang@bestechnic.com>
Date: Sat, 25 Dec 2021 10:51:04 +0800
Subject: [PATCH] utils/native/lite

Signed-off-by: yangjian <jianyang@bestechnic.com>
Change-Id: Ia0c07aa6e75d4d8e6bb2dae5368306e38026e1df
---
 file/src/file_impl_hal/file.c            | 16 +++++++++++++---
 kv_store/src/BUILD.gn                    | 15 +++++++++++----
 kv_store/src/kvstore_impl_hal/kv_store.c | 10 ++++++++--
 3 files changed, 32 insertions(+), 9 deletions(-)

diff --git a/file/src/file_impl_hal/file.c b/file/src/file_impl_hal/file.c
index 6bce29b..9889d5c 100755
--- a/file/src/file_impl_hal/file.c
+++ b/file/src/file_impl_hal/file.c
@@ -22,10 +22,14 @@
 #include <stdbool.h>
 
 #define BUFFER_SIZE 128
+#define DATA_PRE "/data/"
 
 int UtilsFileOpen(const char* path, int oflag, int mode)
 {
-    return HalFileOpen(path, oflag, mode);
+    char path_real[128] = {0};
+    memcpy(path_real,DATA_PRE,strlen(DATA_PRE));
+    memcpy(path_real+strlen(DATA_PRE),path,strlen(path));
+    return HalFileOpen(path_real, oflag, mode);
 }
 
 int UtilsFileClose(int fd)
@@ -45,12 +49,18 @@ int UtilsFileWrite(int fd, const char* buf, unsigned int len)
 
 int UtilsFileDelete(const char* path)
 {
-    return HalFileDelete(path);
+    char path_real[128] = {0};
+    memcpy(path_real,DATA_PRE,strlen(DATA_PRE));
+    memcpy(path_real+strlen(DATA_PRE),path,strlen(path));
+    return HalFileDelete(path_real);
 }
 
 int UtilsFileStat(const char* path, unsigned int* fileSize)
 {
-    return HalFileStat(path, fileSize);
+    char path_real[128] = {0};
+    memcpy(path_real,DATA_PRE,strlen(DATA_PRE));
+    memcpy(path_real+strlen(DATA_PRE),path,strlen(path));
+    return HalFileStat(path_real, fileSize);
 }
 
 int UtilsFileSeek(int fd, int offset, unsigned int whence)
diff --git a/kv_store/src/BUILD.gn b/kv_store/src/BUILD.gn
index c2ce943..10fca70 100755
--- a/kv_store/src/BUILD.gn
+++ b/kv_store/src/BUILD.gn
@@ -11,15 +11,22 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+declare_args() {
+  enable_ohos_utils_native_lite_kv_store_use_posix_kv_api = true
+}
+
 if (ohos_kernel_type == "liteos_m") {
   static_library("utils_kv_store") {
-    sources = [
-      "kvstore_common/kvstore_common.c",
-      "kvstore_impl_hal/kv_store.c",
-    ]
+    sources = [ "kvstore_common/kvstore_common.c" ]
+    if (enable_ohos_utils_native_lite_kv_store_use_posix_kv_api) {
+      sources += [ "kvstore_impl_posix/kv_store.c" ]
+    } else {
+      sources += [ "kvstore_impl_hal/kv_store.c" ]
+    }
     include_dirs = [
       "//utils/native/lite/include",
       "kvstore_common",
+      "//utils/native/lite/kv_store/innerkits",
     ]
   }
 } else {
diff --git a/kv_store/src/kvstore_impl_hal/kv_store.c b/kv_store/src/kvstore_impl_hal/kv_store.c
index 3d4985b..d3096b3 100755
--- a/kv_store/src/kvstore_impl_hal/kv_store.c
+++ b/kv_store/src/kvstore_impl_hal/kv_store.c
@@ -154,7 +154,8 @@ int UtilsDeleteValue(const char* key)
 #endif
     int ret = UtilsFileDelete(key);
     if (ret == EC_SUCCESS) {
-        ret = SetCurrentItem(GetCurrentItem() - 1);
+        if (GetCurrentItem() > 0)
+            ret = SetCurrentItem(GetCurrentItem() - 1);
     }
     return ret;
 }
@@ -164,4 +165,9 @@ int ClearKVCache(void)
 {
     return ClearKVCacheInner();
 }
-#endif
\ No newline at end of file
+#endif
+
+int UtilsSetEnv(const char* path)
+{
+    return EC_SUCCESS;
+}
\ No newline at end of file
-- 
2.17.1

