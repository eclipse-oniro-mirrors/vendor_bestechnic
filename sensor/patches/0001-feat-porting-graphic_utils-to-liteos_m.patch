From 9091e98e8f4105731d644f497392baa74bd77689 Mon Sep 17 00:00:00 2001
From: leihuang <leihuang@bestechnic.com>
Date: Thu, 9 Sep 2021 10:32:31 +0800
Subject: [PATCH] feat: porting graphic_utils to liteos_m

Signed-off-by: leihuang <leihuang@bestechnic.com>
Change-Id: I13e2139939456ccedba98086eac3024f1e9f37fb
---
 BUILD.gn                                | 76 ++++++++++++++-----------
 interfaces/innerkits/graphic_config.h   | 24 ++++----
 interfaces/kits/gfx_utils/graphic_log.h | 33 +++--------
 3 files changed, 66 insertions(+), 67 deletions(-)
 mode change 100644 => 100755 BUILD.gn
 mode change 100644 => 100755 interfaces/innerkits/graphic_config.h

diff --git a/BUILD.gn b/BUILD.gn
old mode 100644
new mode 100755
index 0bfcf85..22bddc7
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -24,18 +24,24 @@ ndk_lib("lite_graphic_utils_ndk") {
   head_files = [ "interfaces/kits" ]
 }
 
-lite_component("lite_graphic_hals") {
-  features = [ ":graphic_hals" ]
-  public_deps = features
-}
+# lite_component("lite_graphic_hals") {
+#   features = [ ":graphic_hals" ]
+#   public_deps = features
+# }
 
-ndk_lib("lite_graphic_hals_ndk") {
-  lib_extension = ".so"
-  deps = [ ":graphic_hals" ]
-  head_files = []
-}
+# ndk_lib("lite_graphic_hals_ndk") {
+#   lib_extension = ".so"
+#   deps = [ ":graphic_hals" ]
+#   head_files = []
+# }
+
+lite_library("graphic_utils") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+  } else {
+    target_type = "shared_library"
+  }
 
-shared_library("graphic_utils") {
   if (enable_graphic_dualcore == true) {
     defines = [ "HAL_CPU_NUM = 2" ]
   }
@@ -57,11 +63,17 @@ shared_library("graphic_utils") {
   ]
   include_dirs = [ "frameworks" ]
   public_configs = [ ":graphic_utils_public_config" ]
-  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
-  public_deps =
-      [ "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared" ]
-  cflags = [ "-fPIC" ]
-  cflags += [ "-Wall" ]
+  if (ohos_kernel_type == "liteos_m") {
+    deps = [ "//third_party/bounds_checking_function:libsec_static" ]
+    public_deps =
+        [ "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static" ]
+    include_dirs += [ "//third_party/musl/porting/liteos_m/kernel/include" ]
+  } else {
+    deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
+    public_deps =
+        [ "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared" ]
+  }
+  cflags = [ "-Wall" ]
   cflags_cc = cflags
 }
 
@@ -72,23 +84,23 @@ config("graphic_utils_public_config") {
   ]
 }
 
-shared_library("graphic_hals") {
-  sources = [
-    "frameworks/hals/gfx_engines.cpp",
-    "frameworks/hals/hi_fbdev.cpp",
-  ]
-  include_dirs = [ "//foundation/graphic/wms/interfaces/innerkits" ]
-  deps = [
-    ":lite_graphic_utils",
-    "//drivers/peripheral/display/hal:hdi_display",
-  ]
-  public_configs = [ ":graphic_hals_public_config" ]
-  ldflags = [
-    "-ldisplay_gfx",
-    "-ldisplay_gralloc",
-    "-ldisplay_layer",
-  ]
-}
+# shared_library("graphic_hals") {
+#   sources = [
+#     "frameworks/hals/gfx_engines.cpp",
+#     "frameworks/hals/hi_fbdev.cpp",
+#   ]
+#   include_dirs = [ "//foundation/graphic/wms/interfaces/innerkits" ]
+#   deps = [
+#     ":lite_graphic_utils",
+#     "//drivers/peripheral/display/hal:hdi_display",
+#   ]
+#   public_configs = [ ":graphic_hals_public_config" ]
+#   ldflags = [
+#     "-ldisplay_gfx",
+#     "-ldisplay_gralloc",
+#     "-ldisplay_layer",
+#   ]
+# }
 
 config("graphic_hals_public_config") {
   include_dirs = [
diff --git a/interfaces/innerkits/graphic_config.h b/interfaces/innerkits/graphic_config.h
old mode 100644
new mode 100755
index eebdb17..961a976
--- a/interfaces/innerkits/graphic_config.h
+++ b/interfaces/innerkits/graphic_config.h
@@ -53,7 +53,7 @@ namespace OHOS {
  * VERSION_STANDARD    | Standard version
  * VERSION_EXTENDED    | Extended version
  */
-#ifdef _LITEOS
+#ifdef __LITEOS_M__
 #define VERSION_LITE
 #elif defined _WIN32 || defined __APPLE__
 #define VERSION_LITE
@@ -65,7 +65,7 @@ namespace OHOS {
 
 #define ENABLE_FIXED_POINT                    1
 
-#ifdef _LITEOS
+#ifdef __LITEOS_M__
 /**
  * @brief Font shaping, which is disabled by default on Huawei LiteOS.
  *        Cannot take effect without ENABLE_ICU.
@@ -86,7 +86,7 @@ namespace OHOS {
 /**
  * @brief Display buffer for rendering data refresh, which is disabled by default on Huawei LiteOS.
  */
-#define ENABLE_FRAME_BUFFER               0
+#define ENABLE_FRAME_BUFFER               1
 /**
  * @brief Vector type font, which is enabled by default on Huawei LiteOS.
  */
@@ -100,11 +100,13 @@ namespace OHOS {
  */
 #define ENABLE_STATIC_FONT                0
 
-#define ENABLE_JPEG_AND_PNG               0
+#define ENABLE_JPEG_AND_PNG               1
+
+#define ENABLE_GIF                        1
 /**
  * @brief Graphics rendering hardware acceleration, which is enabled by default on Huawei LiteOS.
  */
-#define ENABLE_HARDWARE_ACCELERATION      1
+#define ENABLE_HARDWARE_ACCELERATION      0
 /**
  * @brief Graphics rendering hardware acceleration for text, which is disabled by default on Huawei LiteOS.
  */
@@ -207,7 +209,7 @@ namespace OHOS {
 /**
  * @brief Function for monitoring the image refresh frame rate, which is disabled by default.
  */
-#define ENABLE_FPS_SUPPORT                0
+#define ENABLE_FPS_SUPPORT                1
 /**
  * @brief Anti-aliasing, which is enabled by default.
  */
@@ -224,7 +226,7 @@ namespace OHOS {
 /**
  * @brief Log function of a graphics subsystem, which is disabled by default
  */
-#define ENABLE_GRAPHIC_LOG                0
+#define ENABLE_GRAPHIC_LOG                1
 /**
  * @brief Performance tracking for debugging, which is disabled by default.
  */
@@ -279,7 +281,7 @@ namespace OHOS {
  * @brief Defines the file name of default vector font.
  */
 #if ENABLE_VECTOR_FONT
-#define DEFAULT_VECTOR_FONT_FILENAME      "SourceHanSansSC-Regular.otf"
+#define DEFAULT_VECTOR_FONT_FILENAME      "font.ttf" //"SourceHanSansSC-Regular.otf"
 #else
 #define DEFAULT_VECTOR_FONT_FILENAME      "SourceHanSansSC-Regular"
 #endif
@@ -288,7 +290,7 @@ static constexpr uint8_t DEFAULT_VECTOR_FONT_SIZE = 18;
 /* Defines the file name of default line break rule. */
 #define DEFAULT_LINE_BREAK_RULE_FILENAME   "line_cj.brk"
 /* Defines some configurations and their default values on Huawei LiteOS and other system platforms. */
-#ifdef _LITEOS
+#ifdef __LITEOS_M__
 /* Resolution width of a graphics display screen. The default value is <b>454</b>. */
 static constexpr int16_t HORIZONTAL_RESOLUTION = 454;
 /* Resolution height of a graphics display screen. The default value is <b>454</b>. */
@@ -324,11 +326,13 @@ static constexpr const char* VECTOR_FONT_DIR = "..\\..\\simulator\\font\\";
 static constexpr const char* DEFAULT_DUMP_DOM_TREE_PATH = ".\\dump_dom_tree.json";
 /* Default file path for font */
 static constexpr const char* VECTOR_FONT_DIR = "..\\..\\tools\\font\\font_tool\\font_tool\\font\\";
-#elif defined _LITEOS
+#elif defined __LITEOS_M__
 /* Default file path for screenshots */
 static constexpr const char* DEFAULT_SCREENSHOT_PATH = "user/log/screenshot.bin";
 /* Default file path for DOM tree logs */
 static constexpr const char* DEFAULT_DUMP_DOM_TREE_PATH = "user/log/dump_dom_tree.json";
+/* Default file path for font */
+static constexpr const char* VECTOR_FONT_DIR = "/data/"; // It must end with '/'.
 #else
 /* Default file path for screenshots */
 static constexpr const char* DEFAULT_SCREENSHOT_PATH = "/storage/screenshot.bin";
diff --git a/interfaces/kits/gfx_utils/graphic_log.h b/interfaces/kits/gfx_utils/graphic_log.h
index 8d2a268..a355b4c 100755
--- a/interfaces/kits/gfx_utils/graphic_log.h
+++ b/interfaces/kits/gfx_utils/graphic_log.h
@@ -19,6 +19,8 @@
 #include "graphic_config.h"
 #if ENABLE_GRAPHIC_LOG
 #ifdef __LITEOS__
+#undef LOG_TAG
+#define LOG_TAG "Graphic"
 #include "hilog/log.h"
 #include <cstring>
 #else
@@ -29,34 +31,15 @@
 namespace OHOS {
 #if ENABLE_GRAPHIC_LOG
 #ifdef __LITEOS__
-typedef enum {
-    LOG_LEVEL_FATAL = 0,
-    LOG_LEVEL_ERROR,
-    LOG_LEVEL_WARN,
-    LOG_LEVEL_INFO,
-    LOG_LEVEL_DEBUG,
-    LOG_LEVEL_MAX
-} LOG_LEVEL;
 
-static constexpr HiviewDFX::HiLogLabel GRPHIC_LABEL = {LOG_CORE, 0xD001400, "Graphic"};
-
-#define FILE_NAME(x) (strrchr(x, '/') ? (strrchr(x, '/') + 1) : x)
-
-#define GRAPHIC_DECORATOR_HILOG(level, op, fmt, args...)                                                    \
-do {                                                                                                        \
-    if ((level < GRAPHIC_LOG_LEVEL) && (level < LOG_LEVEL_MAX)) {                                           \
-        op(GRPHIC_LABEL, "{%s()-%s:%d} " fmt, __FUNCTION__, FILE_NAME(__FILE__), __LINE__, ##args);         \
-    }                                                                                                       \
-} while (0)
-
-#define GRAPHIC_LOGF(fmt, args...) GRAPHIC_DECORATOR_HILOG(LOG_LEVEL_FATAL, HiviewDFX::HiLog::Fatal, fmt, ##args)
-#define GRAPHIC_LOGE(fmt, args...) GRAPHIC_DECORATOR_HILOG(LOG_LEVEL_ERROR, HiviewDFX::HiLog::Error, fmt, ##args)
-#define GRAPHIC_LOGW(fmt, args...) GRAPHIC_DECORATOR_HILOG(LOG_LEVEL_WARN, HiviewDFX::HiLog::Warn, fmt, ##args)
-#define GRAPHIC_LOGI(fmt, args...) GRAPHIC_DECORATOR_HILOG(LOG_LEVEL_INFO, HiviewDFX::HiLog::Info, fmt, ##args)
-#define GRAPHIC_LOGD(fmt, args...) GRAPHIC_DECORATOR_HILOG(LOG_LEVEL_DEBUG, HiviewDFX::HiLog::Debug, fmt, ##args)
+#define GRAPHIC_LOGF(fmt, args...) HILOG_FATAL(HILOG_MODULE_GRAPHIC, fmt "\n", ##args)
+#define GRAPHIC_LOGE(fmt, args...) HILOG_ERROR(HILOG_MODULE_GRAPHIC, fmt "\n", ##args)
+#define GRAPHIC_LOGW(fmt, args...) HILOG_WARN(HILOG_MODULE_GRAPHIC, fmt "\n", ##args)
+#define GRAPHIC_LOGI(fmt, args...) HILOG_INFO(HILOG_MODULE_GRAPHIC, fmt "\n", ##args)
+#define GRAPHIC_LOGD(fmt, args...) HILOG_DEBUG(HILOG_MODULE_GRAPHIC, fmt "\n", ##args)
 
 #else
-#define GRAPHIC_LOGF(...) printf("[%d]" format "\n", __LINE__, ##__VA_ARGS__)
+#define GRAPHIC_LOGF(format, ...) printf("[%d]" format "\n", __LINE__, ##__VA_ARGS__)
 #define GRAPHIC_LOGE(...) GRAPHIC_LOGF(__VA_ARGS__)
 #define GRAPHIC_LOGW(...) GRAPHIC_LOGF(__VA_ARGS__)
 #define GRAPHIC_LOGI(...) GRAPHIC_LOGF(__VA_ARGS__)
-- 
2.17.1

