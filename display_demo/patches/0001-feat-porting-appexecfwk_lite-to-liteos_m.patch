From eaec4376a080b3472067e47001ada2678ec0173e Mon Sep 17 00:00:00 2001
From: leihuang <leihuang@bestechnic.com>
Date: Sun, 26 Sep 2021 02:23:27 +0800
Subject: [PATCH] feat: porting appexecfwk_lite to liteos_m

Signed-off-by: leihuang <leihuang@bestechnic.com>
Change-Id: I1e55fc7e77ce91b5500060c84dad7ac65bc2b5f1
---
 frameworks/bundle_lite/BUILD.gn               | 82 +++++++++++++------
 .../src/slite/bundlems_slite_client.cpp       |  6 +-
 interfaces/kits/bundle_lite/bundle_manager.h  |  5 +-
 utils/bundle_lite/adapter.h                   |  4 +-
 4 files changed, 68 insertions(+), 29 deletions(-)
 mode change 100644 => 100755 frameworks/bundle_lite/BUILD.gn

diff --git a/frameworks/bundle_lite/BUILD.gn b/frameworks/bundle_lite/BUILD.gn
old mode 100644
new mode 100755
index a3892f5..2d49a5a
--- a/frameworks/bundle_lite/BUILD.gn
+++ b/frameworks/bundle_lite/BUILD.gn
@@ -25,29 +25,63 @@ lite_component("appexecfwk_kits_lite") {
   features = [ ":bundle" ]
 }
 
-lite_library("bundle") {
-  target_type = "shared_library"
-  sources = [
-    "src/ability_info.cpp",
-    "src/ability_info_utils.cpp",
-    "src/bundle_callback.cpp",
-    "src/bundle_callback_utils.cpp",
-    "src/bundle_info.cpp",
-    "src/bundle_info_utils.cpp",
-    "src/bundle_manager.cpp",
-    "src/bundle_self_callback.cpp",
-    "src/convert_utils.cpp",
-    "src/element_name.cpp",
-    "src/module_info.cpp",
-    "src/module_info_utils.cpp",
-    "src/token_generate.cpp",
+config("bundle_config") {
+  include_dirs = [
+    "${appexecfwk_lite_path}/interfaces/kits/bundle_lite/slite",
+    "${appexecfwk_lite_path}/interfaces/kits/bundle_lite",
   ]
+}
 
-  deps = [
-    "${aafwk_lite_path}/frameworks/want_lite:want",
-    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
-    "//base/security/permission/services/permission_lite/pms_client:pms_client",
-  ]
+lite_library("bundle") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+
+    sources = [
+      "src/ability_info.cpp",
+      "src/ability_info_utils.cpp",
+      "src/bundle_info.cpp",
+      "src/bundle_info_utils.cpp",
+      "src/element_name.cpp",
+      "src/module_info.cpp",
+      "src/module_info_utils.cpp",
+      "src/slite/bundle_manager.cpp",
+      "src/slite/bundle_manager_inner.cpp",
+      "src/slite/bundlems_slite_client.cpp",
+    ]
+
+    public_configs = [ ":bundle_config" ]
+
+    public_deps = [
+      "${aafwk_lite_path}/frameworks/want_lite:want",
+      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static",
+    ]
+  } else {
+    target_type = "shared_library"
+
+    sources = [
+      "src/ability_info.cpp",
+      "src/ability_info_utils.cpp",
+      "src/bundle_callback.cpp",
+      "src/bundle_callback_utils.cpp",
+      "src/bundle_info.cpp",
+      "src/bundle_info_utils.cpp",
+      "src/bundle_manager.cpp",
+      "src/bundle_self_callback.cpp",
+      "src/convert_utils.cpp",
+      "src/element_name.cpp",
+      "src/module_info.cpp",
+      "src/module_info_utils.cpp",
+      "src/token_generate.cpp",
+    ]
+
+    deps = [
+      "${aafwk_lite_path}/frameworks/want_lite:want",
+      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
+      "//base/security/permission/services/permission_lite/pms_client:pms_client",
+    ]
+
+    defines = [ "OHOS_APPEXECFWK_BMS_BUNDLEMANAGER" ]
+  }
 
   cflags = [
     "-fPIC",
@@ -62,7 +96,10 @@ lite_library("bundle") {
     "//base/security/permission/services/permission_lite/pms/include",
     "${aafwk_lite_path}/frameworks/want_lite/include",
     "${aafwk_lite_path}/interfaces/kits/want_lite",
+    "${aafwk_lite_path}/interfaces/kits/ability_lite/slite",
     "${aafwk_lite_path}/interfaces/innerkits/abilitymgr_lite",
+    "${appexecfwk_lite_path}/services/bundlemgr_lite/include",
+    "${appexecfwk_lite_path}/interfaces/innerkits/bundlemgr_lite/slite",
     "${appexecfwk_lite_path}/interfaces/innerkits/bundlemgr_lite",
     "${appexecfwk_lite_path}/interfaces/kits/bundle_lite",
     "${appexecfwk_lite_path}/utils/bundle_lite",
@@ -71,10 +108,9 @@ lite_library("bundle") {
     "//foundation/distributedschedule/samgr_lite/interfaces/kits/registry",
     "//third_party/bounds_checking_function/include",
     "//utils/native/lite/include",
+    "//utils/native/lite/memory/include",
     "//third_party/cJSON",
   ]
-
-  defines = [ "OHOS_APPEXECFWK_BMS_BUNDLEMANAGER" ]
 }
 
 ndk_lib("bundle_notes") {
diff --git a/frameworks/bundle_lite/src/slite/bundlems_slite_client.cpp b/frameworks/bundle_lite/src/slite/bundlems_slite_client.cpp
index 9460733..d3e7076 100755
--- a/frameworks/bundle_lite/src/slite/bundlems_slite_client.cpp
+++ b/frameworks/bundle_lite/src/slite/bundlems_slite_client.cpp
@@ -83,8 +83,8 @@ bool BundleMsClient::Install(const char *hapPath, const InstallParam *installPar
     g_bmsbuff->bundleInstallerCallback = installerCallback;
     Request request = {
         .msgId = BMS_INSTALL_MSG,
-        .data = nullptr,
         .len = 0,
+        .data = nullptr,
         .msgValue = 0,
     };
 
@@ -118,8 +118,8 @@ bool BundleMsClient::Uninstall (const char *bundleName, const InstallParam *inst
     g_bmsbuff->bundleInstallerCallback = installerCallback;
     Request request = {
         .msgId = BMS_UNINSTALL_MSG,
-        .data = nullptr,
         .len = 0,
+        .data = nullptr,
         .msgValue = 0,
     };
     int32_t ret = SAMGR_SendRequest(service->GetIdentity(), &request, nullptr);
@@ -141,8 +141,8 @@ bool BundleMsClient::RegisterInstallerCallback (InstallerCallback installerCallb
     g_bmsbuff->bundleInstallerCallback = installerCallback;
     Request request = {
         .msgId = BMS_REGISTER_CALLBACK_MSG,
-        .data = nullptr,
         .len = 0,
+        .data = nullptr,
         .msgValue = 0,
     };
     int32_t ret = SAMGR_SendRequest(service->GetIdentity(), &request, nullptr);
diff --git a/interfaces/kits/bundle_lite/bundle_manager.h b/interfaces/kits/bundle_lite/bundle_manager.h
index 3d1b8ae..32e75d9 100755
--- a/interfaces/kits/bundle_lite/bundle_manager.h
+++ b/interfaces/kits/bundle_lite/bundle_manager.h
@@ -71,6 +71,7 @@ extern "C" {
  */
 typedef void (*InstallerCallback)(const uint8_t resultCode, const void *resultMessage);
 
+#ifdef OHOS_APPEXECFWK_BMS_BUNDLEMANAGER
 /**
  * @brief Registers a callback to monitor the installation, update, and uninstallation state changes of an application.
  *
@@ -95,6 +96,7 @@ int32_t RegisterCallback(BundleStatusCallback *BundleStatusCallback);
  * @version 1.0
  */
 int32_t UnregisterCallback();
+#endif
 
 /**
  * @brief Installs or updates an application.
@@ -176,6 +178,7 @@ uint8_t GetBundleInfo(const char *bundleName, int32_t flags, BundleInfo *bundleI
  */
 uint8_t GetBundleInfos(const int flags, BundleInfo **bundleInfos, int32_t *len);
 
+#ifdef OHOS_APPEXECFWK_BMS_BUNDLEMANAGER
 /**
  * @brief Obtains the {@link BundleInfo} of all keep-alive applications in the system.
  *
@@ -246,7 +249,7 @@ SystemCapability *GetSystemAvailableCapabilities();
  * @version 4
  */
 void FreeSystemAvailableCapabilitiesInfo(SystemCapability *sysCap);
-
+#endif
 /**
  * @brief Get bundle size
  *
diff --git a/utils/bundle_lite/adapter.h b/utils/bundle_lite/adapter.h
index 0f53edb..9137709 100755
--- a/utils/bundle_lite/adapter.h
+++ b/utils/bundle_lite/adapter.h
@@ -22,7 +22,7 @@
 #define EXTERNC
 #endif
 
-#ifndef APP_PLATFORM_WATCHGT
+#ifndef __LITEOS_M__
 // memory operator define
 #include <stdlib.h>
 
@@ -43,7 +43,7 @@
 #define MutexAcquire(a, b) pthread_mutex_lock(a)
 #define MutexRelease(a) pthread_mutex_unlock(a)
 
-#else // APP_PLATFORM_WATCHGT
+#else // __LITEOS_M__
 #include "stdint.h"
 #include "ohos_mem_pool.h"
 
-- 
2.17.1

