From b7c249c2ed46a8d804d80a9af17414198690400a Mon Sep 17 00:00:00 2001
From: SimonLi <likailong@huawei.com>
Date: Mon, 15 Nov 2021 16:35:21 +0800
Subject: [PATCH] foundation ace ace_engine_lite

Change-Id: I3aa39eb0440989dc7d6ce143a90253e9fac8eb6b
---
 frameworks/BUILD.gn                           | 57 +++++++++++++------
 frameworks/common/BUILD.gn                    | 14 ++++-
 frameworks/module_manager/BUILD.gn            | 34 +++++++----
 frameworks/native_engine/BUILD.gn             | 15 ++++-
 .../async/message_queue_utils.cpp             |  8 +--
 .../src/core/context/js_app_context.cpp       |  2 +-
 frameworks/targets/liteos_m/acelite_config.h  | 24 ++++----
 frameworks/targets/platform_adapter.cpp       |  2 +-
 8 files changed, 105 insertions(+), 51 deletions(-)
 mode change 100644 => 100755 frameworks/common/BUILD.gn
 mode change 100644 => 100755 frameworks/module_manager/BUILD.gn
 mode change 100644 => 100755 frameworks/native_engine/BUILD.gn
 mode change 100644 => 100755 frameworks/native_engine/async/message_queue_utils.cpp
 mode change 100644 => 100755 frameworks/targets/platform_adapter.cpp

diff --git a/frameworks/BUILD.gn b/frameworks/BUILD.gn
index 5b96908..c6586c2 100755
--- a/frameworks/BUILD.gn
+++ b/frameworks/BUILD.gn
@@ -25,25 +25,42 @@ lite_component("jsfwk") {
 
 config("ace_lite_config") {
   include_dirs = ace_lite_include_dirs
-  if (ohos_kernel_type == "liteos_a" || ohos_kernel_type == "liteos_m") {
+
+  if (ohos_kernel_type == "liteos_m") {
+    include_dirs += [ "targets/liteos_m" ]
+  } else if (ohos_kernel_type == "liteos_a") {
     include_dirs += [ "targets/liteos_a" ]
   } else if (ohos_kernel_type == "linux") {
     include_dirs += [ "targets/linux" ]
   }
+
   cflags_cc = [ "-std=c++14" ]
   ldflags = [ "-lstdc++" ]
-  ldflags += [ "-lpthread" ]
-  ldflags += [ "-Wl,-rpath-link=$ohos_root_path/$root_out_dir" ]
+
+  if (ohos_kernel_type == "liteos_m") {
+    ldflags += [ "-lposix" ]
+  } else {
+    ldflags += [ "-lpthread" ]
+    ldflags += [ "-Wl,-rpath-link=$ohos_root_path/$root_out_dir" ]
+  }
 }
 
-shared_library("ace_lite") {
-  configs -= [ "//build/lite/config:language_cpp" ]
-  cflags = [ "-Wall" ]
-  cflags_cc = cflags
-  configs += [ ":ace_lite_config" ]
-  public_configs = configs
+lite_library("ace_lite") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+  } else {
+    target_type = "shared_library"
+  }
+
+  public_configs = [ ":ace_lite_config" ]
 
   sources = ace_lite_sources
+  if (ohos_kernel_type == "liteos_m") {
+    sources -= [
+      "$ACE_LITE_PATH/src/core/context/ace_ability.cpp",
+      "$ACE_LITE_PATH/src/core/modules/dfx_module.cpp",
+    ]
+  }
 
   public_deps = [
     "$ACE_LITE_COMMON_PATH:ace_common_lite",
@@ -51,19 +68,23 @@ shared_library("ace_lite") {
     "$NATIVE_ENGINE_PATH:ace_native_engine_lite",
     "//base/global/i18n_lite/frameworks/i18n:global_i18n",
     "//base/global/resmgr_lite/frameworks/resmgr_lite:global_resmgr",
-    "//build/lite/config/component/cJSON:cjson_shared",
-    "//foundation/graphic/surface:lite_surface",
+    "//build/lite/config/component/cJSON:cjson_static",
     "//foundation/graphic/ui:lite_ui",
-    "//foundation/multimedia/camera_lite/frameworks:camera_lite",
-    "//foundation/multimedia/media_lite/frameworks/player_lite:player_lite",
-    "//third_party/bounds_checking_function:libsec_shared",
-    "//third_party/jerryscript/jerry-core:jerry-core_shared",
-    "//third_party/jerryscript/jerry-ext:jerry-ext_shared",
-    "//third_party/jerryscript/jerry-libm:jerry-libm_shared",
-    "//third_party/jerryscript/jerry-port/default:jerry-port-default_shared",
+    "//third_party/bounds_checking_function:libsec_static",
+    "//third_party/jerryscript:jerry_engine",
     "//utils/native/lite/timer_task:ace_kit_timer",
   ]
 
+  if (ohos_kernel_type != "liteos_m") {
+    public_deps += [
+      "//build/lite/config/component/cJSON:cjson_shared",
+      "//foundation/graphic/surface:lite_surface",
+      "//foundation/multimedia/camera_lite/frameworks:camera_lite",
+      "//foundation/multimedia/media_lite/frameworks/player_lite:player_lite",
+      "//third_party/bounds_checking_function:libsec_shared",
+    ]
+  }
+
   defines = []
 
   if (ohos_build_type == "debug") {
diff --git a/frameworks/common/BUILD.gn b/frameworks/common/BUILD.gn
old mode 100644
new mode 100755
index d51cc4e..b424ca8
--- a/frameworks/common/BUILD.gn
+++ b/frameworks/common/BUILD.gn
@@ -22,7 +22,13 @@ lite_component("ace_common_lite") {
   features = [ ":ace_common" ]
 }
 
-shared_library("ace_common") {
+lite_library("ace_common") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+  } else {
+    target_type = "shared_library"
+  }
+
   include_dirs = [
     "$ace_common_root/log",
     "$ace_common_root/memory",
@@ -49,5 +55,9 @@ shared_library("ace_common") {
     "$ace_common_root/memory/memory_heap.cpp",
   ]
 
-  public_deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
+  if (ohos_kernel_type == "liteos_m") {
+    public_deps = [ "//third_party/bounds_checking_function:libsec_static" ]
+  } else {
+    public_deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
+  }
 }
diff --git a/frameworks/module_manager/BUILD.gn b/frameworks/module_manager/BUILD.gn
old mode 100644
new mode 100755
index f3441dc..5ec0bf4
--- a/frameworks/module_manager/BUILD.gn
+++ b/frameworks/module_manager/BUILD.gn
@@ -22,7 +22,13 @@ lite_component("ace_module_manager_lite") {
   features = [ ":ace_module_manager" ]
 }
 
-shared_library("ace_module_manager") {
+lite_library("ace_module_manager") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+  } else {
+    target_type = "shared_library"
+  }
+
   include_dirs = [
     "$ace_frameworks_root/common/log",
     "$ace_frameworks_root/common/utils",
@@ -34,26 +40,32 @@ shared_library("ace_module_manager") {
     "//third_party/jerryscript/jerry-core/include",
     "//third_party/bounds_checking_function/include",
   ]
-  if (ohos_kernel_type == "liteos_a" || ohos_kernel_type == "liteos_m") {
+  if (ohos_kernel_type == "liteos_m") {
+    include_dirs += [ "$ace_target_root/liteos_m" ]
+  } else if (ohos_kernel_type == "liteos_a") {
     include_dirs += [ "$ace_target_root/liteos_a" ]
   } else if (ohos_kernel_type == "linux") {
     include_dirs += [ "$ace_target_root/linux" ]
   }
 
-  cflags = [ "-Wall" ]
-  cflags_cc = cflags
-
   sources = [ "$ace_frameworks_root/module_manager/module_manager.cpp" ]
 
   public_deps = [
     "$ace_frameworks_root/common:ace_common_lite",
     "$ace_frameworks_root/native_engine:ace_native_engine_lite",
-    "${appexecfwk_lite_path}/interfaces/kits/bundle_lite/js/builtin:capability_api",
-    "//base/powermgr/battery_lite/frameworks/js:ace_battery_kits",
-    "//base/security/huks/frameworks/crypto_lite/js/builtin:ace_kit_cipher",
-    "//foundation/multimedia/media_lite/interfaces/kits/player_lite/js/builtin:audio_lite_api",
-    "//third_party/bounds_checking_function:libsec_shared",
-    "//third_party/jerryscript/jerry-core:jerry-core_shared",
+#"//base/powermgr/battery_lite/frameworks/js:ace_battery_kits",
+    "//foundation/graphic/ui:ui",
+    "//third_party/bounds_checking_function:libsec_static",
+    "//third_party/jerryscript:jerry_engine",
     "//utils/native/lite/js/builtin:ace_utils_kits",
   ]
+
+  if (ohos_kernel_type != "liteos_m") {
+    public_deps += [
+      "//foundation/multimedia/media_lite/interfaces/kits/player_lite/js/builtin:audio_lite_api",
+      "${appexecfwk_lite_path}/interfaces/kits/bundle_lite/js/builtin:capability_api",
+      "//base/security/huks/frameworks/crypto_lite/js/builtin:ace_kit_cipher",
+      "//third_party/bounds_checking_function:libsec_shared",
+    ]
+  }
 }
diff --git a/frameworks/native_engine/BUILD.gn b/frameworks/native_engine/BUILD.gn
old mode 100644
new mode 100755
index ac56627..9e538dc
--- a/frameworks/native_engine/BUILD.gn
+++ b/frameworks/native_engine/BUILD.gn
@@ -23,7 +23,13 @@ lite_component("ace_native_engine_lite") {
   features = [ ":ace_native_engine" ]
 }
 
-shared_library("ace_native_engine") {
+lite_library("ace_native_engine") {
+  if (ohos_kernel_type == "liteos_m") {
+    target_type = "static_library"
+  } else {
+    target_type = "shared_library"
+  }
+
   include_dirs = [
     "$ace_common_root/log",
     "$ace_common_root/memory",
@@ -33,7 +39,9 @@ shared_library("ace_native_engine") {
     "//base/hiviewdfx/hilog_lite/interfaces/native/kits",
     "//third_party/jerryscript/jerry-core/include",
   ]
-  if (ohos_kernel_type == "liteos_a" || ohos_kernel_type == "liteos_m") {
+  if (ohos_kernel_type == "liteos_m") {
+    include_dirs += [ "$ace_target_root/liteos_m" ]
+  } else if (ohos_kernel_type == "liteos_a") {
     include_dirs += [ "$ace_target_root/liteos_a" ]
   } else if (ohos_kernel_type == "linux") {
     include_dirs += [ "$ace_target_root/linux" ]
@@ -50,6 +58,7 @@ shared_library("ace_native_engine") {
 
   public_deps = [
     "$ace_common_root:ace_common_lite",
-    "//third_party/jerryscript/jerry-core:jerry-core_shared",
+    "//foundation/graphic/ui:ui",
+    "//third_party/jerryscript:jerry_engine",
   ]
 }
diff --git a/frameworks/native_engine/async/message_queue_utils.cpp b/frameworks/native_engine/async/message_queue_utils.cpp
old mode 100644
new mode 100755
index 18fc87c..00a0edd
--- a/frameworks/native_engine/async/message_queue_utils.cpp
+++ b/frameworks/native_engine/async/message_queue_utils.cpp
@@ -28,7 +28,7 @@ QueueHandler MessageQueueUtils::CreateMessageQueue(uint32_t capacity, uint32_t m
         HILOG_ERROR(HILOG_MODULE_ACE, "MessageQueueUtils:CreateMessageQueue parameters invalid!");
         return nullptr;
     }
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
     HILOG_WARN(HILOG_MODULE_ACE, "todo call linux createMessageQueue interface here!");
     return nullptr;
 #else
@@ -43,7 +43,7 @@ int8_t MessageQueueUtils::DeleteMessageQueue(QueueHandler handler)
         HILOG_ERROR(HILOG_MODULE_ACE, "MessageQueueUtils:DeleteMessageQueue parameters invalid!");
         return MSGQ_FAIL;
     }
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
     HILOG_WARN(HILOG_MODULE_ACE, "todo call linux deleteMessageQueue interface here!");
     return MSGQ_FAIL;
 #else
@@ -62,7 +62,7 @@ int8_t MessageQueueUtils::PutMessage(QueueHandler handler, const void* msgPtr, u
         HILOG_ERROR(HILOG_MODULE_ACE, "MessageQueueUtils:PutMessage parameters invalid!");
         return MSGQ_FAIL;
     }
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
     HILOG_WARN(HILOG_MODULE_ACE, "todo call linux putmsg interface here!");
     return MSGQ_FAIL;
 #else
@@ -82,7 +82,7 @@ int8_t MessageQueueUtils::GetMessage(QueueHandler handler, void* msgPtr, uint32_
         HILOG_ERROR(HILOG_MODULE_ACE, "MessageQueueUtils:GetMessage parameters invalid!");
         return MSGQ_FAIL;
     }
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
     HILOG_WARN(HILOG_MODULE_ACE, "todo call linux getmsg interface here!");
     return MSGQ_FAIL;
 #else
diff --git a/frameworks/src/core/context/js_app_context.cpp b/frameworks/src/core/context/js_app_context.cpp
index 87afbe1..c47373e 100755
--- a/frameworks/src/core/context/js_app_context.cpp
+++ b/frameworks/src/core/context/js_app_context.cpp
@@ -16,7 +16,7 @@
 #include "js_app_context.h"
 #include "ace_event_error_code.h"
 #include "ace_log.h"
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
 #include "ace_ability.h"
 #endif
 #ifdef FEATURE_API_VERSION
diff --git a/frameworks/targets/liteos_m/acelite_config.h b/frameworks/targets/liteos_m/acelite_config.h
index ad16e44..6468617 100755
--- a/frameworks/targets/liteos_m/acelite_config.h
+++ b/frameworks/targets/liteos_m/acelite_config.h
@@ -29,9 +29,6 @@
  */
 #define OHOS_ACELITE_PRODUCT_WATCH
 
-// delete this after jerry porting is ready
-#define JERRY_PORTING_DEPENDENCY
-
 /**
  * enable Canvas component Feature API on ipcamera real devices
  */
@@ -67,8 +64,11 @@
 /**
  * enable localization feature
  */
-#define FEATURE_LOCALIZATION_MODULE
+// #define FEATURE_LOCALIZATION_MODULE
+
+#define FEATURE_ACELITE_HI_LOG_PRINTF
 
+#if 0
 /**
  * support mc ace log module trace
  */
@@ -83,6 +83,7 @@
  * support mc console log
  */
 #define FEATURE_USER_MC_LOG_PRINTF
+#endif
 
 /**
  * support config for product JS modules
@@ -140,22 +141,23 @@
 /**
  * date time module
  */
-#define FEATURE_DATE_FORMAT
-
-#define FEATURE_API_VERSION
+// #define FEATURE_DATE_FORMAT
 
-#define JS_ENGINE_STATIC_MULTI_CONTEXTS_ENABLED
+// #define FEATURE_API_VERSION
 
+// #define JS_ENGINE_STATIC_MULTI_CONTEXTS_ENABLED
+#define FEATURE_MODULE_STORAGE
+#define FEATURE_MODULE_DEVICE
 /**
  * support js profiler
  */
 #define FEATURE_ACELITE_MC_JS_PROFILER
 
-#define DEFAULT_PROFILER_MSG_PATH "user/log/"
+#define DEFAULT_PROFILER_MSG_PATH "/log/"
 
-#define PROFILER_ENABLE_FLAG_FILE "user/data/profiler_enable"
+#define PROFILER_ENABLE_FLAG_FILE "/data/profiler_enable"
 
-#define RUNTIME_MODE_FILE_PATH "user/data/jsparser_enable"
+#define RUNTIME_MODE_FILE_PATH "/data/jsparser_enable"
 
 /**
  * Rotation API feature
diff --git a/frameworks/targets/platform_adapter.cpp b/frameworks/targets/platform_adapter.cpp
old mode 100644
new mode 100755
index ef3d193..288a733
--- a/frameworks/targets/platform_adapter.cpp
+++ b/frameworks/targets/platform_adapter.cpp
@@ -16,7 +16,7 @@
 #include "platform_adapter.h"
 #include <cstdlib>
 #include "acelite_config.h"
-#if (defined(__LINUX__) || defined(__LITEOS__))
+#if (defined(__LINUX__) || defined(__LITEOS_A__))
 #include "ace_ability.h"
 #endif
 #include "ace_log.h"
-- 
2.17.1

